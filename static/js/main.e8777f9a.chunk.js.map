{"version":3,"sources":["components/CategorySelector/index.js","components/Resource/ResourceFields.js","components/Resource/ResourceCard.js","components/Resource/index.js","App.js","reportWebVitals.js","index.js"],"names":["CategorySelector","props","useState","error","setError","isLoading","setIsLoading","categories","setCategories","useEffect","fetch","then","res","json","result","catch","className","message","Object","keys","map","category","onClick","setCategory","ResourceFields","resource","filteredFields","key","indexOf","Array","isArray","ResourceCard","expand","setExpand","name","title","Resource","currentPage","setCurrentPage","more","setMore","setResource","console","log","results","next","length","item","index","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8777f9a.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './CategorySelector.css';\n\nfunction CategorySelector(props) {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [categories, setCategories] = useState({});\n\n  useEffect(() => {\n    fetch(\"https://swapi.dev/api/\")\n      .then(res => res.json())\n      .then((result) => {\n        setIsLoading(false);\n        setCategories(result);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }, []);\n  if (error) {\n    return <div className=\"error\">{error.message}</div>\n  } else if (isLoading) {\n    return <div>...loading</div>\n  } else {\n    return (\n      <nav className=\"categories\">\n        {\n          Object.keys(categories).map(category => (\n            <a \n              onClick={() => props.setCategory(category)} \n              key={category}\n              className={category === props.category ? 'selected' : ''}\n            >\n              {category}\n            </a>\n          ))\n        }\n      </nav>\n    )\n  }\n\n};\n\nexport default CategorySelector;\n","import React from 'react';\nimport './ResourceFields.css';\n\nfunction ResourceFields({ resource }) {\n  const filteredFields = ['title', 'name', 'created', 'edited', 'url'];\n  return (\n    <ul className=\"resource-fields\">\n      { Object.keys(resource).map((key) => filteredFields.indexOf(key) !== -1 ? '':  Array.isArray(resource[key]) ? '' : <li>{key}: {resource[key]}</li> ) }\n    </ul>\n\n  );\n};\n\nexport default ResourceFields;\n","import React, { useState } from 'react';\nimport ResourceFields from './ResourceFields';\nimport './ResourceCard.css';\n\nfunction ResourceCard({ resource }) {\n  const [expand, setExpand] = useState(false);\n  return (\n    <li className={`resource-card ${expand ? \"expanded\" : \"\"}`} onClick={() => setExpand(!expand)}>\n      {resource.name || resource.title}\n      {\n        expand && <ResourceFields resource={resource}/>\n      }\n    </li>\n  )\n};\n\nexport default ResourceCard;\n","import React, {useEffect, useState} from 'react';\nimport ResourceCard from './ResourceCard';\nimport './Resource.css';\n\nfunction Resource(props) {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [more, setMore] = useState(false);\n  const [resource, setResource] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setResource([]);\n    setCurrentPage(1);\n    fetch(`https://swapi.dev/api/${props.category}/`) \n      .then(res => res.json())\n      .then((result) => {\n        setIsLoading(false);\n        console.log(result);\n        setResource(result.results);\n        setMore(!!result.next);\n      })\n      .catch(error => setError(error));\n  }, [props.category]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(`https://swapi.dev/api/${props.category}/?page=${currentPage}`) \n      .then(res => res.json())\n      .then((result) => {\n        setIsLoading(false);\n        setResource([...resource, ...result.results]);\n        setMore(!!result.next);\n      })\n      .catch(error => setError(error));\n  }, [currentPage]);\n\n  if (error) {\n    return (\n      <div onClick={() => setError(null)} className=\"resource-container\">\n        <p className=\"error\">{error.message} click to dismiss</p>\n      </div>\n    )\n  } else if (isLoading && !resource.length) {\n    return <div>...Loading</div>\n  } else {\n    return (\n      <div className=\"resource-container\">\n        <ul className=\"resource\">\n        {\n          resource.map((item, index) => <ResourceCard resource={item} key={index}/>)\n        }\n        </ul>\n        {more == true && <button className=\"more-button\" onClick={() => setCurrentPage(currentPage + 1)}>Load More</button>}\n      </div>\n    )\n  }\n};\n\nexport default Resource;\n","import React, {useState} from 'react';\nimport './App.css';\n\nimport { \n  CategorySelector,\n  Resource,\n} from './components';\n\nfunction App() {\n  const [category, setCategory] = useState('films');\n  return (\n    <main>\n      <h1>Star Wars API Explorer</h1>\n      <CategorySelector category={category} setCategory={setCategory} />\n      <Resource category={category}/>\n     \n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}